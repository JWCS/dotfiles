#!/bin/bash
# .dotfiles/.bashrc_features

# _has_cmd, _is_set, _is_nonempty, _mk_alias, alias_nice
source ~/.dotfiles/bash/util.sh

## Auto-setup
source ~/.dotfiles/git/git_functions.sh

# docker
if _has_cmd docker; then
  source ~/.dotfiles/docker/docker_functions.sh
fi

# tmux
if _has_cmd tmux; then
  source ~/.dotfiles/tmux/tmux_functions.sh
fi

# direnv
if _has_cmd direnv; then
  eval "$(direnv hook bash)"
  alias_nice tmux 'direnv exec / tmux'
fi

# pyenv
if [ -d "$HOME/.pyenv" ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  if _has_cmd pyenv; then
    eval "$(pyenv init -)"
    source $(pyenv root)/completions/pyenv.bash
  fi
fi

# pipx
if _has_cmd pipx; then
  if ! _has_cmd register-python-argcomplete; then
    pipx install argcomplete
  fi
  eval "$(register-python-argcomplete pipx)"
fi

# uv
if _has_cmd uv; then
  eval "$(uv generate-shell-completion bash)"
fi
if _has_cmd uvx; then
  eval "$(uvx --generate-shell-completion bash)"
fi

# node version manager
if [ -d "$HOME/.nvm" ]; then
  # nodejs version manager
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# subrepo
if [ -d ~/.local/share/git-subrepo ]; then
  source ~/.local/share/git-subrepo/.rc 2>/dev/null
fi

# tailscale alias
if _has_cmd tailscale; then
  source <(tailscale completion bash)
  alias_nice ts 'tailscale'
fi

# glow
if _has_cmd glow; then
  source <(glow completion bash)
fi

# legacy / todo: cuda, opam, ros
# ros2:
#buildless (){
#  unbuffer colcon build $@ 3>&1 1>&2 2>&3 3>&- | less -R
#}

## Explicit Features

# BRC_FEAT_KEYCHAINS="id_rsa"
if _has_cmd keychain && _is_nonempty BRC_FEAT_KEYCHAINS; then
  # Simplify downstream ssh/git pass
  eval `keychain --eval $BRC_FEAT_KEYCHAINS 2>/dev/null`
fi

# BRC_FEAT_GIT_PROXY=1
if _is_set BRC_FEAT_GIT_PROXY; then
  alias_nice git-proxy "HTTPS_PROXY=socks5://127.0.0.1:1080 git"
fi

# BRC_FEAT_WSL=1
if _is_set BRC_FEAT_WSL; then
  if [ -f "/mnt/c/Program Files/Meld/Meld.exe" ] && ! [ -f /usr/local/bin/meld ]; then
    sudo ln -s /mnt/c/Program\ Files/Meld/Meld.exe /usr/local/bin/meld
  fi
  function meldtool_wsl(){
    meld --auto-merge \
      "$(wslpath -aw $LOCAL)" "$(wslpath -aw $BASE)" "$(wslpath -aw $REMOTE)" \
      --output "$(wslpath -aw $MERGED)" \
      --label=Local --label=Base --label=Remote \
      --diff "$(wslpath -aw $BASE)" "$(wslpath -aw $LOCAL)" \
      --diff "$(wslpath -aw $BASE)" "$(wslpath -aw $REMOTE)"
  }
  function meldtool(){
    : ${LOCAL:=${1:?}}
    : ${REMOTE:=${2:?}}
    : ${MERGED:=${3:?}}
    : ${BASE:=${3}}
    meldtool_wsl
  }
fi

# .bashrc_features

